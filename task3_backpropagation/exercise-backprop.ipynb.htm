{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1163150 - Backpropagation - Exercise: Computational Graphs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Table of Contents\n",
    "* [Introduction](#Introduction)\n",
    "* [Requirements](#Requirements) \n",
    "  * [Knowledge](#Knowledge) \n",
    "  * [Modules](#Python-and-System-Packages)\n",
    "* [Exercise: Pen and Paper Backpropagation](#Pen-and-Paper-Backpropagation)\n",
    "* [Exercise: Implement the Example](#Implement-the-Example)\n",
    "* [Summary and Outlook](#Summary-and-Outlook)\n",
    "* [Literature](#Literature) \n",
    "* [Licenses](#Licenses) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "\n",
    "In this exercise, you will apply the backpropagation algorithm to computational graphs. Backpropagation is the method we use to calculate the gradients of all learnable parameters in an artificial neural network efficiently and conveniently. Approaching the algorithm from the perspective of computational graphs gives a good intuition about its operations."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Requirements\n",
    "\n",
    "### Knowledge\n",
    "You should already be familiar with the backpropagation algorithm, as well as differential calculus. Following resources we recommend if this topic is new to you:\n",
    "\n",
    "- Chapter 6.5 of [Deep Learning](http://www.deeplearningbook.org/contents/ml.html) by Ian Goodfellow gives a brief introduction into the field\n",
    "- MOOC [Calculus](https://www.khanacademy.org/math/calculus-1) from Khan Academy\n",
    "\n",
    "### Python and System Packages\n",
    "To run that Notebook you should have the `graphviz` package installed on your System. Look at the [Graphviz-Website](https://graphviz.gitlab.io/download/) for installation guidance. Further, the Python module `Digraph` is only working with Jupyter Notebook (not Lab) at the moment. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# External Modules\n",
    "from graphviz import Digraph\n",
    "import numpy as np\n",
    "import hashlib"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pen and Paper Backpropagation\n",
    "Given the function $ f(a,b,c) $ as a computational graph with the following values for the parameters:\n",
    "\n",
    "$$\n",
    "a = 2 \\\\\n",
    "b = e \\; (Euler \\;number, \\;b \\approx 2.7183) \\\\\n",
    "c = 3\n",
    "$$\n",
    "\n",
    "Your tasks are:\n",
    "- Calculate the partial derivative $ \\frac {\\partial out} {\\partial a}$, $ \\frac {\\partial out} {\\partial b}$ and $ \\frac {\\partial out} {\\partial c}$ using backpropagation\n",
    "- Give an equation that expresses the graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n",
       " -->\n",
       "<!-- Title: computat:onal_graph Pages: 1 -->\n",
       "<svg width=\"514pt\" height=\"164pt\"\n",
       " viewBox=\"0.00 0.00 514.37 163.62\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 159.6181)\">\n",
       "<title>computat:onal_graph</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-159.6181 510.3654,-159.6181 510.3654,4 -4,4\"/>\n",
       "<!-- a -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>a</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"93.5\" cy=\"-137.6181\" rx=\"18\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"93.5\" y=\"-133.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">a</text>\n",
       "</g>\n",
       "<!-- + -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>+</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"169\" cy=\"-115.6181\" rx=\"18\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"169\" y=\"-111.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">+</text>\n",
       "</g>\n",
       "<!-- a&#45;&gt;+ -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>a&#45;&gt;+</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M111.011,-132.5156C120.1589,-129.85 131.558,-126.5284 141.8228,-123.5373\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"142.9624,-126.8509 151.584,-120.693 141.0041,-120.1304 142.9624,-126.8509\"/>\n",
       "<text text-anchor=\"middle\" x=\"131.25\" y=\"-129.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n",
       "</g>\n",
       "<!-- b -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>b</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"18\" cy=\"-83.6181\" rx=\"18\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"18\" y=\"-79.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">b</text>\n",
       "</g>\n",
       "<!-- ln -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>ln</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"93.5\" cy=\"-83.6181\" rx=\"18\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"93.5\" y=\"-79.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">ln</text>\n",
       "</g>\n",
       "<!-- b&#45;&gt;ln -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>b&#45;&gt;ln</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M36.2764,-83.6181C44.9938,-83.6181 55.6191,-83.6181 65.3367,-83.6181\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"65.3919,-87.1182 75.3919,-83.6181 65.3918,-80.1182 65.3919,-87.1182\"/>\n",
       "<text text-anchor=\"middle\" x=\"55.75\" y=\"-86.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n",
       "</g>\n",
       "<!-- c -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>c</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"169\" cy=\"-61.6181\" rx=\"18\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"169\" y=\"-57.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">c</text>\n",
       "</g>\n",
       "<!-- *  -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>* </title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"250.1181\" cy=\"-83.6181\" rx=\"18\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"250.1181\" y=\"-79.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">* </text>\n",
       "</g>\n",
       "<!-- c&#45;&gt;*  -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>c&#45;&gt;* </title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M186.6014,-66.3918C197.125,-69.2459 210.7231,-72.9338 222.6358,-76.1647\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"221.9836,-79.6142 232.5511,-78.8538 223.8159,-72.8582 221.9836,-79.6142\"/>\n",
       "</g>\n",
       "<!-- +&#45;&gt;*  -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>+&#45;&gt;* </title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M185.8077,-108.9877C196.793,-104.6542 211.3673,-98.9048 223.8638,-93.9751\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"225.314,-97.1656 233.3319,-90.2401 222.7452,-90.654 225.314,-97.1656\"/>\n",
       "<text text-anchor=\"middle\" x=\"206.75\" y=\"-102.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n",
       "</g>\n",
       "<!-- ln&#45;&gt;+ -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>ln&#45;&gt;+</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M110.2559,-90.72C119.8351,-94.7801 132.0588,-99.961 142.8726,-104.5443\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"141.7179,-107.8562 152.2909,-108.5362 144.4496,-101.4112 141.7179,-107.8562\"/>\n",
       "<text text-anchor=\"middle\" x=\"131.25\" y=\"-102.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n",
       "</g>\n",
       "<!-- * -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>*</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"328.7363\" cy=\"-35.6181\" rx=\"18\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"328.7363\" y=\"-31.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">*</text>\n",
       "</g>\n",
       "<!-- * &#45;&gt;* -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>* &#45;&gt;*</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M265.6506,-74.1349C276.7414,-67.3634 291.8773,-58.1223 304.5431,-50.3892\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"306.525,-53.28 313.2361,-45.0817 302.8773,-47.3055 306.525,-53.28\"/>\n",
       "</g>\n",
       "<!-- 1/x -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>1/x</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"405.1436\" cy=\"-35.6181\" rx=\"21.315\" ry=\"21.315\"/>\n",
       "<text text-anchor=\"middle\" x=\"405.1436\" y=\"-31.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">1/x</text>\n",
       "</g>\n",
       "<!-- *&#45;&gt;1/x -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>*&#45;&gt;1/x</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M346.8438,-35.6181C354.7734,-35.6181 364.3178,-35.6181 373.367,-35.6181\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"373.6359,-39.1182 383.6359,-35.6181 373.6358,-32.1182 373.6359,-39.1182\"/>\n",
       "</g>\n",
       "<!-- 1/3  -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>1/3 </title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"250.1181\" cy=\"-23.6181\" rx=\"23.7369\" ry=\"23.7369\"/>\n",
       "<text text-anchor=\"middle\" x=\"250.1181\" y=\"-19.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">1/3 </text>\n",
       "</g>\n",
       "<!-- 1/3 &#45;&gt;* -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>1/3 &#45;&gt;*</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M273.7062,-27.2185C282.2885,-28.5285 292.0678,-30.0212 300.9781,-31.3812\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"300.5014,-34.8489 310.9151,-32.898 301.5577,-27.9291 300.5014,-34.8489\"/>\n",
       "</g>\n",
       "<!-- out -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>out</title>\n",
       "<ellipse fill=\"none\" stroke=\"#000000\" cx=\"484.9581\" cy=\"-35.6181\" rx=\"21.315\" ry=\"21.315\"/>\n",
       "<text text-anchor=\"middle\" x=\"484.9581\" y=\"-31.4181\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">out</text>\n",
       "</g>\n",
       "<!-- 1/x&#45;&gt;out -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>1/x&#45;&gt;out</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M426.9533,-35.6181C435.1141,-35.6181 444.556,-35.6181 453.4209,-35.6181\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"453.4512,-39.1182 463.4512,-35.6181 453.4511,-32.1182 453.4512,-39.1182\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.dot.Digraph at 0x108d51860>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# creating empty graph ad set some attributes\n",
    "f = Digraph('computat:onal_graph', filename='graph_clean.gv')\n",
    "f.attr(rankdir='LR')\n",
    "f.attr('node', shape='circle')\n",
    "\n",
    "# create the graph\n",
    "f.node('a')\n",
    "f.node('b')\n",
    "f.node('c')\n",
    "f.edge('a', '+', label=' ')\n",
    "f.edge('b', 'ln', label=' ')\n",
    "f.edge('ln', '+', label=' ')\n",
    "f.edge('+','* ', label=' ')\n",
    "f.edge('c','* ')\n",
    "f.edge('* ', '*')\n",
    "f.edge('1/3 ', '*')\n",
    "f.edge('*','1/x')\n",
    "f.edge('1/x','out')\n",
    "\n",
    "f"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Implement the Example\n",
    "In the pen and paper exercise, you calculated the partial derivatives for some specific values of $a$, $b$, and $c$ of the graph $f(a,b,c)$. Your task now is to generalize that solution. Implement the used functions $+$, $*$ and $1/x$ and their derivatives. Chain the functions to calculate $f(a,b,c)$ in a forward pass and $ \\frac {\\partial out} {\\partial a}$, $ \\frac {\\partial out} {\\partial b}$, $ \\frac {\\partial out} {\\partial c}$ in the backward pass for arbitrary values of $a$, $b$, and $c$.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Your implementation here"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary and Outlook\n",
    "\n",
    "In this exercise, we expressed a function $f(a,b,c)$ as a computational graph and calculated the partial derivatives for its parameters using backpropagation. You also explored a possible implementation of that specific example. The generalization of that example-implementation can lead to a solution like [Autograd](https://github.com/HIPS/autograd).  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Licenses\n",
    "\n",
    "### Notebook License (CC-BY-SA 4.0)\n",
    "\n",
    "*The following license applies to the complete notebook, including code cells. It does however not apply to any referenced external media (e.g., images).*\n",
    "\n",
    "Exercise: Computational Graphs <br/>\n",
    "by Benjamin Voigt <br/>\n",
    "is licensed under a [Creative Commons Attribution-ShareAlike 4.0 International License](http://creativecommons.org/licenses/by-sa/4.0/).<br/>\n",
    "Based on a work at https://gitlab.com/deep.TEACHING.\n",
    "\n",
    "\n",
    "### Code License (MIT)\n",
    "\n",
    "*The following license only applies to code cells of the notebook.*\n",
    "\n",
    "Copyright 2018 Benjamin Voigt\n",
    "\n",
    "Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n",
    "\n",
    "The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n",
    "\n",
    "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
